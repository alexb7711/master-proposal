* Proposed Project
:PROPERTIES:
:CUSTOM_ID: sec:proposed-project
:END:

The PAP provides a basis for assigning BEBs to queues in order to be charged. Lets begin by defining some of the
assumptions made by the PAP. Each arriving vessel requires both time and space to be serviced and thus must be carefully
assigned a berthing location [cite:@imai-2001-dynam-berth]. Vessels are lined up parallel to the berth to be serviced
and are horizontally queued as shown in \autoref{subfig:bapexample}. The PAP utilizes this notion of queuing for
scheduling vehicles to be charged, as shown in \autoref{subfig:papexample}. The PAP is formulated as a rectangle packing
problem and assumes that vehicle charging will take a predefined amount of time, the quantity of vehicles that can
charge simultaneously is limited by the physical width of the vehicles and the charger length. It is assumed that each
vehicle visits the charger a single time [cite:@qarebagh-2019-optim-sched].

#+begin_src latex
\begin{subfigures}
    %%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    % BAP
    \begin{figure}[htpb]
    \centering
        \includestandalone{sup-doc/milp-pap-paper-frontiers/img/bap}
        \caption{Example of berth allocation. Vessels are docked in berth locations (horizontal) and are queued over
          time (vertical). The vertical arrow represents the movement direction of queued vessels and the horizontal
          arrow represents the direction of departure.}
        \label{subfig:bapexample}
    \end{figure}
    \hfill

    %%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    % PAP
    \begin{figure}[htpb]
    \centering
        \includestandalone{sup-doc/milp-pap-paper-frontiers/img/pap}
        \caption{Example of position allocation. Vehicles are placed in queues to be charged and move in the direction
          indicated by the arrow.}
        \label{subfig:papexample}
    \end{figure}
\end{subfigures}
#+end_src

As stated previously, the proposed project will further improve upon the PAP. While there are many avenues that may be
taken, the first task is to adapt the PAP to accommodate a BEB charging scenario where a fleet of buses is prescribed a
set of routes that they must adhere to. Firstly, due to the unknown charge state that a bus may arrive in, the charge
time must be variable, rather than an input parameter as is done currently for the BAP and PAP. Furthermore, both the
BAP and PAP consider each arrival to be unique; thus, a method of tracking buses must be implemented. As for queuing,
the PAP models the set of chargers as one continuous line; thus, the set of chargers must be discretized. The last set
of additions made upon the PAP is the design of the objective function. Input parameters are selected in such a manner
as to minimize the number of fast and slow charger utilized as well as minimize the energy consumption. The result is a
MILP formulation that coordinates charging times and charger type for every visit that each bus makes to the station
while considering a proportional dynamic charging model with scheduling constraints. The described improvements have
been completed as a proof of concept in what is known as the MILP-PAP. This proof of concept was written in the Python
programming language using Gurobi as the MILP solver.

While the linear battery dynamics is a valid assumption when the battery State-Of-Charge (SOC) is below 80%
[cite:@liu-2020-batter-elect], non-linear battery dynamics can be implemented to increase the accuracy of the model. A
common way to model the non-linear battery dynamics is utilizing CCCV [cite:@abdollahi-2016-optim-batter;
@chen-2008-desig-grey]. [cite:@zhang-2021-optim-elect] further suggests that the dynamics can be modeled as a piecewise
function containing a linear and non-linear component. Others have modeled the battery dynamics as a discrete first
order dynamics model [cite:@whitaker-2022-a-network]. The first-order differential system, when provided a step input,
approximates the non-linear relationship between time and the current SOC [cite:@whitaker-2022-a-network]. The
first-order differential method is method proposed to be pursued.

One of the drawbacks of the MILP implementation is the strict solution that is generated. Suppose that a solution was
generated, but due to weather conditions a bus arrives at the station five minutes late. The generated solution is no
longer valid due to one bus arriving late. This also could arise as an issue if a bus arrives early to the station. To
make matters worse, if a bus were to not adhere to the generated solution early on in the working day, the majority of
the solution is now void, and a new solution must be generated if optimality is desired. The crux of the problem is that
the time of arrival is uncertain. A potential solution to this problem is to fuzzify the MILP model.

Fuzzy mathematical programming is useful in situations where imprecise parameters exist [cite:@bello-2019-fuzzy-activ].
There are many methodologies that exist to solve Fully Fuzzy Linear Programs; however, the primary strategy of solving
FFLP problems is converting them into a classical (crisp) model
[cite:@bello-2019-fuzzy-activ;@nasseri-2013-fully;@kaur-2016-introd-fuzzy]. The chosen technique to pursue is the Kumar
and Kaurs method [cite:@kaur-2016-introd-fuzzy]. A model for the Fuzzy MILP-PAP has been drafted, but yet has been
implemented.

** Method And Validation
The proposed work is to be modeled and simulated using a SA approach written in the Rust programming language. Rust is
chosen for its reliability with its ownership model, performance that is comparable to C/C++, and its Python-like
packaging system. SA was chosen as for its simplicity in implementation, and is one of the best known metaheuristic
methods for "addressing difficult black global optimization problems" [cite:@delahaye-2019-simul]. Note that the SA-PAP
implementation has begun. At the moment the main development that has been completed is: project structure/design,
implementation of the skeletal framework, code for importing route data, and some work has been done on the generating
functions.

As previously stated, the MILP-PAP has been implemented and tested. Thus the MILP-PAP shall be used as a baseline
measure to compare the results of the proposed work. The major professor overlooking the project will be Dr. Droge who
will be monitoring the progress of the project on a bi-weekly basis.

** Project Schedule
The following Gantt chart, shown in \autoref{fig:gantt}, plots out the work that has been completed and the work to be completed.
The estimated completion date is early to mid-November. Note that the blocks before the =TODAY= mark in
\autoref{fig:gantt} is work that has been previously completed or is work in progress.

#+begin_src latex
  \begin{figure}

    \begin{ganttchart}[
      vgrid={*{11}{gray, dotted}, *1{black, dashed}},
      bar label node/.append style={
        align=left,
        text width=width("Aim 2. Software verificationx")},
      today=20
      ]{1}{24}
      \gantttitle{2022}{12} \gantttitle{2023}{12} \\
      \gantttitlelist{1,...,24}{1} \\
      \ganttbar{MILP-PAP}{1}{12} \\
      \ganttbar{SA-PAP}{9}{21} \\
      \ganttbar{Non-Linear Battery Dynamics}{20}{21} \\
      \ganttbar{Fuzzy PAP}{18}{23} \\
      \ganttbar{Defense}{23}{24} \\
    \end{ganttchart}
    \caption{Gantt chart for the proposed work.}
    \label{fig:gantt}
  \end{figure}

#+end_src
